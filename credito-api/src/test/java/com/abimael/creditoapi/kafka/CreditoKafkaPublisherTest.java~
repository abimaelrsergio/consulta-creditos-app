package com.abimael.creditoapi.kafka;

import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.common.serialization.StringSerializer;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.*;
import org.springframework.kafka.core.KafkaTemplate;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class CreditoKafkaPublisherTest {

    @Mock
    private KafkaTemplate<String, String> kafkaTemplate;

    private CreditoKafkaPublisher publisher;

    @Captor
    private ArgumentCaptor<String> messageCaptor;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        publisher = new CreditoKafkaPublisher(kafkaTemplate);
    }

    @Test
    void devePublicarMensagemQuandoConsultaPorNumeroCredito() {
        String numeroCredito = "999";

        publisher.publicarConsultaNumeroCredito(numeroCredito);

        verify(kafkaTemplate).send(eq("consultas_credito"), messageCaptor.capture());
        assertTrue(messageCaptor.getValue().contains(numeroCredito));
    }

    @Test
    void devePublicarMensagemQuandoConsultaPorNumeroNfse() {
        String numeroNfse = "456789";

        publisher.publicarConsultaNumeroNfse(numeroNfse);

        verify(kafkaTemplate).send(eq("consultas_credito"), messageCaptor.capture());
        assertTrue(messageCaptor.getValue().contains(numeroNfse));
    }
}
